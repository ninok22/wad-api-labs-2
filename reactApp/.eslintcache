[{"/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/util.js":"1","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/index.js":"2","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/loginPage.js":"3","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/authContext.js":"4","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/privateRoute.js":"5","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/pages.js":"6","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/authHeader.js":"7","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/moviesContext.js":"8","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/signUpPage.js":"9","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/api/movie-api.js":"10"},{"size":245,"mtime":1661436086899,"results":"11","hashOfConfig":"12"},{"size":1796,"mtime":1662943398707,"results":"13","hashOfConfig":"14"},{"size":1282,"mtime":1662829197751,"results":"15","hashOfConfig":"14"},{"size":1738,"mtime":1662850596015,"results":"16","hashOfConfig":"14"},{"size":754,"mtime":1662845250719,"results":"17","hashOfConfig":"14"},{"size":1155,"mtime":1662943037387,"results":"18","hashOfConfig":"14"},{"size":718,"mtime":1662845210458,"results":"19","hashOfConfig":"14"},{"size":882,"mtime":1662852849440,"results":"20","hashOfConfig":"14"},{"size":1662,"mtime":1662852332794,"results":"21","hashOfConfig":"14"},{"size":1487,"mtime":1662943160052,"results":"22","hashOfConfig":"14"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vp8jo5",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ckovst",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/util.js",[],"/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/index.js",[],"/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/loginPage.js",[],["47","48"],"/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/authContext.js",["49","50"],"import React, { useState, createContext } from \"react\";\nimport { login, signup } from \"./api/movie-api\";\n\nexport const AuthContext = createContext(null);\n\nconst AuthContextProvider = (props) => {\n  const existingToken = localStorage.getItem(\"token\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authToken, setAuthToken] = useState(existingToken);\n  const [userName, setUserName] = useState(\"\");\n\n  //Function to put JWT token in local storage.\n  const setToken = (data) => {\n    localStorage.setItem(\"token\", data);\n    setAuthToken(data);\n  }\n\n  const authenticate = async (username, password) => {\n    const result = await login(username, password);\n    if (result.token) {\n      setToken(result.token)\n      setIsAuthenticated(true);\n      setUserName(username);\n    }\n  };\n\n  const register = async (username, password) => {\n    const result = await signup(username, password);\n    console.log(result.code);\n    return (result.code == 201) ? true : false;\n  };\n\n  const signout = () => {\n    setTimeout(() => setIsAuthenticated(false), 100);\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        authenticate,\n        register,\n        signout,\n        userName\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n\n/* You will use this context to manage and keep track of the user \nauthentication. Notice that it contains isAuthenticated, userName, \nand authToken state variables. It also provides authanticate() and \nregister() functions that use the API to authenticate and register users. \nThe localStorage.setItem(\"token\", data); statement is used to store \nthe JWT token in the browsers local storage. */","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/privateRoute.js",[],"/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/pages.js",[],"/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/authHeader.js",[],"/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/moviesContext.js",["51"],"import React, { useState, createContext, useEffect, useReducer } from \"react\";\nimport { getMovies } from \"./api/movie-api\";\n\nexport const MoviesContext = createContext(null);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"load\":\n      return { movies: action.payload.result};\n    default:\n      return state;\n  }\n};\n\nconst MoviesContextProvider = props => {\n  const [state, dispatch] = useReducer(reducer, { movies: []});\n  const [authenticated, setAuthenticated] = useState(false);\n\n  useEffect(() => {\n    getMovies().then(result => {\n      console.log(result);\n      dispatch({ type: \"load\", payload: {result}});\n    });\n  },[]);\n\n  return (\n    <MoviesContext.Provider\n      value={{\n        movies: state.movies,\n        setAuthenticated\n      }}\n    >\n      {props.children}\n    </MoviesContext.Provider>\n  );\n};\n\nexport default MoviesContextProvider","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/signUpPage.js",["52"],"import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from './authContext';\n\nconst SignUpPage = props => {\n  const context = useContext(AuthContext)\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordAgain, setPasswordAgain] = useState(\"\");\n  const [registered, setRegistered] = useState(false);\n\n  const register = () => {\n    if (password.length > 0 && password === passwordAgain) {\n      context.register(userName, password);\n      setRegistered(true);\n    }\n  }\n\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n  if (registered === true) {\n    return <Redirect to=\"./login\" />;\n  }\n\n  return (\n    <>\n      <h2>SignUp page</h2>\n      <p>You must register a username and password to log in </p>\n      <input value={userName} placeholder=\"user name\" onChange={e => {\n        setUserName(e.target.value);\n      }}></input><br />\n      <input value={password} type=\"password\" placeholder=\"password\" onChange={e => {\n        setPassword(e.target.value);\n      }}></input><br />\n      <input value={passwordAgain} type=\"password\" placeholder=\"password again\" onChange={e => {\n        setPasswordAgain(e.target.value);\n      }}></input><br />\n      {/* Login web form  */}\n      <button onClick={register}>Register</button>\n    </>\n  );\n};\n\nexport default SignUpPage;\n\n\n/* The signup page includes username and password fields that populate \nstate variables. When the Register button is pressed, the register function\nes the authentication context to register the username and password using \nthe movies API. */","/Users/ninokelehsashvili/Desktop/wad-api-labs-2/reactApp/src/api/movie-api.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":10,"nodeType":"59","messageId":"60","endLine":9,"endColumn":19},{"ruleId":"61","severity":1,"message":"62","line":30,"column":25,"nodeType":"63","messageId":"64","endLine":30,"endColumn":27},{"ruleId":"57","severity":1,"message":"65","line":17,"column":10,"nodeType":"59","messageId":"60","endLine":17,"endColumn":23},{"ruleId":"57","severity":1,"message":"66","line":19,"column":11,"nodeType":"59","messageId":"60","endLine":19,"endColumn":15},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'authToken' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'authenticated' is assigned a value but never used.","'from' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]